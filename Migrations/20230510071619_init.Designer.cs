// <auto-generated />
using System;
using Harbor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Harbor.Migrations
{
    [DbContext(typeof(mvcContext))]
    [Migration("20230510071619_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Harbor.Models.Berths", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PortId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PortId");

                    b.ToTable("Berths");
                });

            modelBuilder.Entity("Harbor.Models.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BerthsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid>("ShipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BerthsId");

                    b.HasIndex("ShipId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Cargoes");
                });

            modelBuilder.Entity("Harbor.Models.Ports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("Harbor.Models.Ships", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BerthsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coming_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Departuredate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PortId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BerthsId");

                    b.HasIndex("PortId");

                    b.HasIndex("TransactionsId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Harbor.Models.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("BerthId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PortId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PortsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BerthId");

                    b.HasIndex("PortsId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Harbor.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Harbor.Models.Berths", b =>
                {
                    b.HasOne("Harbor.Models.Ports", "Port")
                        .WithMany("Berths")
                        .HasForeignKey("PortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Port");
                });

            modelBuilder.Entity("Harbor.Models.Cargo", b =>
                {
                    b.HasOne("Harbor.Models.Berths", null)
                        .WithMany("Cargo")
                        .HasForeignKey("BerthsId");

                    b.HasOne("Harbor.Models.Ships", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Harbor.Models.Transactions", null)
                        .WithMany("Cargo")
                        .HasForeignKey("TransactionsId");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Harbor.Models.Ships", b =>
                {
                    b.HasOne("Harbor.Models.Berths", null)
                        .WithMany("Ships")
                        .HasForeignKey("BerthsId");

                    b.HasOne("Harbor.Models.Ports", "Port")
                        .WithMany()
                        .HasForeignKey("PortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Harbor.Models.Transactions", null)
                        .WithMany("Ships")
                        .HasForeignKey("TransactionsId");

                    b.Navigation("Port");
                });

            modelBuilder.Entity("Harbor.Models.Transactions", b =>
                {
                    b.HasOne("Harbor.Models.Berths", "Berth")
                        .WithMany()
                        .HasForeignKey("BerthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Harbor.Models.Ports", "Ports")
                        .WithMany()
                        .HasForeignKey("PortsId");

                    b.HasOne("Harbor.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Berth");

                    b.Navigation("Ports");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Harbor.Models.Berths", b =>
                {
                    b.Navigation("Cargo");

                    b.Navigation("Ships");
                });

            modelBuilder.Entity("Harbor.Models.Ports", b =>
                {
                    b.Navigation("Berths");
                });

            modelBuilder.Entity("Harbor.Models.Transactions", b =>
                {
                    b.Navigation("Cargo");

                    b.Navigation("Ships");
                });

            modelBuilder.Entity("Harbor.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
